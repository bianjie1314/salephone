<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.phone.dao.IOrdersDao">

    <!-- 添加 -->
    <insert id="addBean" parameterType="OrdersPojo">
        <selectKey order="AFTER" resultType="int" keyProperty="id">
            select last_insert_id()
        </selectKey>
        insert into orders(user_id,order_code,phone_id,num,pay,status,create_time,update_time)
        values(#{userId},#{orderCode},#{phoneId},#{num},#{pay},#{status},#{createTime},#{updateTime})
    </insert>


    <delete id="deleteById" parameterType="java.lang.Integer">
        delete from orders
        where id = #{id}
    </delete>

    <!-- 更新信息 -->
    <update id="updateBean" parameterType="OrdersPojo">
        update orders
        <set>
            <if test="userId > 0">
                user_id = #{userId},
            </if>
            <if test="phoneId > 0">
                phone_id = #{phoneId},
            </if>
            <if test="num > 0">
                num = #{num},
            </if>
            <if test="pay > 0">
                pay = #{pay},
            </if>
            <if test="status > 0">
                status = #{status},
            </if>
            <if test="createTime != null">
                create_time = #{createTime},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime}
            </if>
        </set>
        where id=#{id}
    </update>


    <!-- 更新信息 -->
    <update id="updateByMap" parameterType="map">
        update orders
        <set>
            <if test="status > 0">
                status = #{status},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime}
            </if>
        </set>
        <where>
            <if test="id != null">
               and id=#{id}
            </if>
            <if test="ids != null">
                and id in
                <foreach collection="ids" open="(" separator="," item="id" close=")">
                    #{id}
                </foreach>
            </if>
        </where>
    </update>


    <select id="countOrderStatus" parameterType="int" resultType="map">
      select t1.needPay,t2.needDelivery,t3.needPen,t4.hsPen,t5.hsEvelate,t6.hsFinish,t7.returnOrder from
        (select count(*) as needPay from orders where user_id=#{userId} and status = 1) as t1,
        (select count(*) as needDelivery from orders where user_id=#{userId} and status = 2) as t2,
        (select count(*) as needPen from orders where user_id=#{userId} and status = 3) as t3,
        (select count(*) as hsPen from orders where user_id=#{userId} and status = 4) as t4,
        (select count(*) as hsEvelate from orders o left join evelate e on o.id = e.order_id where o.user_id=#{userId} and o.status = 5 and e.status = 2) as t5,
        (select count(*) as hsFinish from orders where user_id=#{userId} and (status = 6 or status = 7)) as t6,
        (select count(*) as returnOrder from orders where user_id=#{userId} and (status = 8 or status = 9  or status = 10 or status = 11)) as t7
    </select>


    <select id="getById" parameterType="int" resultType="OrdersPojo">
        select * from  orders where id=#{id}
    </select>


    <select id="countNeedPay" parameterType="HashMap" resultType="Double">
        select sum(pay) from  orders where id in
        <foreach collection="ids" open="(" separator="," item="id" close=")">
             #{id}
         </foreach>
    </select>

    <select id="selectOrdersList" parameterType="HashMap" resultType="OrdersPojo">
        select * from  orders
        <where>
            <if test="id != null">
                and id=#{id}
            </if>
            <if test="ids != null">
                and id in
                <foreach collection="ids" open="(" separator="," item="id" close=")">
                    #{id}
                </foreach>
            </if>
        </where>
    </select>

    <sql id="selectSql">
        <where>
            <if test="hashId != null">
                and sp.user_id = #{hashId}
            </if>
            <if test="orderCode != null">
                and o.order_code like '%${orderCode}%'
            </if>
            <if test="status > 0">
                and o.status = #{status}
            </if>
            <if test="statusRange != null">
                and o.status in
                <foreach collection="statusRange" open="(" separator="," item="statusR" close=")">
                    #{statusR}
                </foreach>
            </if>
            <if test="userId != null">
                and o.user_id = #{userId}
            </if>
            <if test="startTime != null and startTime != ''">
                and TO_DAYS(o.create_time) &gt;= TO_DAYS(#{startTime})
            </if>
            <if test="endTime != null and endTime != ''">
                and TO_DAYS(o.create_time) &lt;= TO_DAYS(#{endTime})
            </if>
        </where>
    </sql>

    <select id="countOrders" parameterType="HashMap" resultType="Integer">
        select count(*) from orders o
        left join user u on o.user_id = u.id
        left join phone p on o.phone_id = p.id
        left join shop sp on sp.id = p.shop_id
        <include refid="selectSql"/>
    </select>

    <select id="selectOrdersDetailList" parameterType="HashMap" resultMap="orderMap">
        select o.*,
        u.id as uId,u.username as uName,
        p.id as pId,p.name as pName,p.sale_price as pSalePrice,
        p.type as pType,p.unit_price as pUnitPrice,p.picture_ids as pictureIds
        from  orders o
        left join user u on o.user_id = u.id
        left join phone p on o.phone_id = p.id
        left join shop sp on sp.id = p.shop_id
        <include refid="selectSql"/>
        <if test="start != null">
            limit #{start},#{offset}
        </if>
    </select>

    <!--  返回数据集合只需要几个字段 -->
    <resultMap type="OrdersPojo" id="orderMap">
        <id property="id" column="id"/>
        <result property="orderCode" column="order_code"/>
        <result property="num" column="num"/>
        <result property="userId" column="user_id"/>
        <result property="phoneId" column="phone_id"/>
        <result property="pay" column="pay"/>
        <result property="status" column="status"/>
        <result property="createTime" column="create_time"/>
        <result property="updateTime" column="update_time"/>
        <association property="user" javaType="UserPojo">
            <result property="id" column="uId"/>
            <result property="username" column="uName"/>
        </association>
        <association property="phone" javaType="PhonePojo">
            <result property="id" column="pId"/>
            <result property="name" column="pName"/>
            <result property="pictureIds" column="pictureIds"/>
            <result property="unitPrice" column="pUnitPrice"/>
            <result property="salePrice" column="pSalePrice"/>
            <result property="type" column="pType"/>
        </association>
    </resultMap>
</mapper>